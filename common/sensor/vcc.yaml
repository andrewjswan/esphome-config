# ESP8266 Measuring VCC
platform: adc
pin: VCC
name: VCC Voltage
# update_interval: ${update_interval}
update_interval: 0.5s
id: vcc
icon: mdi:flash-outline
device_class: voltage
state_class: measurement
entity_category: diagnostic
filters:
  - max:  # - sliding_window_moving_average:
      window_size: 3
      send_every: 3
      send_first_at: 3
on_value:
  then:
    - sensor.template.publish:
        id: battery
        state: !lambda |-
          // float batt = ((x - ${vcc_critical}) * (100 - 0)) / (${vcc_full} - ${vcc_critical});
          float batt = ((x - ${vcc_critical}) * 100) / (${vcc_full} - ${vcc_critical});
          if (batt > 100)
          {
            return 100;
          }
          if (batt < 0)
          {
            return 0;
          }
          return batt;
on_value_range:
  below: ${vcc_critical}
  then:
    - logger.log:
        format: "Low power (%.1f), shutdown..."
        level: "WARN"
        tag: "power"
        args: ['id(vcc).state']
    - switch.turn_on: esp_shutdown
    # - button.press: esp_shutdown
